# -*- mode: gitconfig; -*-
# vim: set filetype=gitconfig:
[user]
    name = Hao Chen
    email = chenh1024@gmail.com
[core]
    excludesfile = ~/.config/git/ignore
[merge]
    conflictstyle = diff3
    tool = vimdiff
[alias]
    ad = "add"
    ada = "add --all"
    aliases = "!git config --get-regexp '^alias\\.' | cut -c 7- | sed 's/ / = /'"
    br = "branch"
    cl = "clean"
    cm = "commit"
    cma = "commit -a --verbose"
    cmam = "commit -am"
    cmd = "commit --amend --verbose"
    cmm = "commit -m"
    co = "checkout"
    cob = "!f() { git checkout -b \"$1\" 2>/dev/null || git checkout \"$1\"; }; f"
    com = "!git checkout $(git master-branch)"
    cp = "cherry-pick"
    cpa = "cherry-pick --abort"
    cpc = "cherry-pick --continue"
    df = "diff"
    dfc = "diff --cached"
    dfm = "!git diff $(git merge-base $(git master-branch) HEAD)"
    dfs = "!DELTA_FEATURES=+side-by-side git diff"
    fc = "fetch"
    lg = "log"
    lgl = "log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'"
    lgo = "log --oneline --decorate --graph"
    master-branch = "!git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'"
    mg = "merge"
    mga = "merge --abort"
    mgc = "merge --continue"
    mgm = "!git merge $(git master-branch)"
    pl = "pull"
    plb = "!git pull origin $(git branch --show-current)"
    ps = "push"
    psb = "!git push origin $(git branch --show-current)"
    psd = "push --delete origin"
    rb = "rebase"
    rba = "rebase --abort"
    rbc = "rebase --continue"
    rbi = "rebase -i"
    rbm = "!git rebase $(git master-branch)"
    rs = "reset"
    rsh = "reset --hard"
    rsho = "!git reset --hard origin/$(git branch --show-current)"
    rt = "restore"
    rv = "revert"
    sh = "show"
    ss = "stash"
    st = "status"
    sw = "switch"
    swc = "switch -c"
    swm = "!git switch $(git master-branch)"
    swl = "switch -"  -- switch to last branch
    wt = "worktree"
    # Create a new worktree named 'wt-<branch>' with a new branch '<branch>'
    wtc = "!f() { git worktree add wt-\"$1\" -b \"$1\"; }; f"
    # Remove worktree and delete associated branch. Accepts either branch name or worktree name with 'wt-' prefix
    wtd = "!f() { branch=\"${1#wt-}\"; git worktree remove wt-\"$branch\" && git branch -D \"$branch\"; }; f"
[include]
    path = ~/.config/git/delta.txt
[include]
    path = ~/.config/git/config.local
